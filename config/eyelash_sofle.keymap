#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp LEFT_BRACKET   &kp N1          &kp N2          &kp N3            &kp N4       &kp N5     &kp K_PLAY_PAUSE  &kp N6     &kp N7       &kp N8       &kp N9           &kp N0           &kp BSLH
&kp RIGHT_BRACKET  &kp APOS        &kp COMMA       &kp DOT           &kp P        &kp Y      &kp K_MUTE        &kp F      &kp G        &kp C        &kp R            &kp L            &kp FSLH
&kp TAB            &mt A LEFT_GUI  &mt O LEFT_ALT  &mt E LEFT_SHIFT  &mt U LCTRL  &kp I      &kp K_BACK        &kp D      &mt H RCTRL  &mt T RSHFT  &mt N RIGHT_ALT  &mt S RIGHT_GUI  &kp BSPC
&kp GRAVE          &kp SEMI        &kp Q           &kp J             &kp K        &kp X      &kp K_FORWARD     &kp B      &kp M        &kp W        &kp V            &kp Z            &kp MINUS
&kp C_MUTE         &to 4           &mo 1           &kp ESCAPE        &kp SPACE    &kp RET    &kp ENTER         &kp ENTER  &kp SPACE    &kp DEL      &mo 2            &to 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1            &kp F2         &kp F3            &kp F4             &kp F5            &mmv MOVE_UP     &kp F6         &kp F7         &kp F8                &kp F9                 &kp F10       &trans
&trans      &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp DOT           &mmv MOVE_DOWN   &kp AMPERSAND  &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans
&trans      &kp EXCLAMATION   &kp MINUS      &kp KP_PLUS       &kp KP_EQUAL       &kp POUND         &mmv MOVE_LEFT   &kp PIPE       &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans      &kp CARET         &kp KP_SLASH   &kp KP_ASTERISK   &kp K_BACK         &kp UNDERSCORE    &mmv MOVE_RIGHT  &kp TILDE      &kp DOLLAR     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN   &trans
&kp C_MUTE  &trans            &trans         &trans            &trans             &trans            &mkp LCLK        &trans         &trans         &trans                &trans                 &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans  &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans  &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &trans  &trans  &trans  &sys_reset  &soft_off  &bootloader  &to 3
&trans     &trans        &trans          &trans        &trans        &trans          &trans  &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPSLOCK    &kp A         &kp S         &kp D         &kp F         &kp G        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V         &kp B        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F13         &kp ESC       &kp LEFT_ALT  &kp LCTRL     &kp SPACE     &kp ENTER    &trans  &to 0   &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans           &trans           &trans           &trans           &trans          &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_HUI  &trans          &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans
&trans      &trans           &trans           &trans           &trans           &trans          &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans           &trans           &trans           &trans           &to 0           &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
